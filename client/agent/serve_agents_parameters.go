// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewServeAgentsParams creates a new ServeAgentsParams object
// with the default values initialized.
func NewServeAgentsParams() *ServeAgentsParams {
	var ()
	return &ServeAgentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewServeAgentsParamsWithTimeout creates a new ServeAgentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewServeAgentsParamsWithTimeout(timeout time.Duration) *ServeAgentsParams {
	var ()
	return &ServeAgentsParams{

		timeout: timeout,
	}
}

// NewServeAgentsParamsWithContext creates a new ServeAgentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewServeAgentsParamsWithContext(ctx context.Context) *ServeAgentsParams {
	var ()
	return &ServeAgentsParams{

		Context: ctx,
	}
}

// NewServeAgentsParamsWithHTTPClient creates a new ServeAgentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewServeAgentsParamsWithHTTPClient(client *http.Client) *ServeAgentsParams {
	var ()
	return &ServeAgentsParams{
		HTTPClient: client,
	}
}

/*ServeAgentsParams contains all the parameters to send to the API endpoint
for the serve agents operation typically these are written to a http.Request
*/
type ServeAgentsParams struct {

	/*Fields*/
	Fields *string
	/*IncludeDisconnected*/
	IncludeDisconnected *bool
	/*IncludeUnauthorized*/
	IncludeUnauthorized *bool
	/*Locator*/
	Locator *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the serve agents params
func (o *ServeAgentsParams) WithTimeout(timeout time.Duration) *ServeAgentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the serve agents params
func (o *ServeAgentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the serve agents params
func (o *ServeAgentsParams) WithContext(ctx context.Context) *ServeAgentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the serve agents params
func (o *ServeAgentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the serve agents params
func (o *ServeAgentsParams) WithHTTPClient(client *http.Client) *ServeAgentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the serve agents params
func (o *ServeAgentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the serve agents params
func (o *ServeAgentsParams) WithFields(fields *string) *ServeAgentsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the serve agents params
func (o *ServeAgentsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithIncludeDisconnected adds the includeDisconnected to the serve agents params
func (o *ServeAgentsParams) WithIncludeDisconnected(includeDisconnected *bool) *ServeAgentsParams {
	o.SetIncludeDisconnected(includeDisconnected)
	return o
}

// SetIncludeDisconnected adds the includeDisconnected to the serve agents params
func (o *ServeAgentsParams) SetIncludeDisconnected(includeDisconnected *bool) {
	o.IncludeDisconnected = includeDisconnected
}

// WithIncludeUnauthorized adds the includeUnauthorized to the serve agents params
func (o *ServeAgentsParams) WithIncludeUnauthorized(includeUnauthorized *bool) *ServeAgentsParams {
	o.SetIncludeUnauthorized(includeUnauthorized)
	return o
}

// SetIncludeUnauthorized adds the includeUnauthorized to the serve agents params
func (o *ServeAgentsParams) SetIncludeUnauthorized(includeUnauthorized *bool) {
	o.IncludeUnauthorized = includeUnauthorized
}

// WithLocator adds the locator to the serve agents params
func (o *ServeAgentsParams) WithLocator(locator *string) *ServeAgentsParams {
	o.SetLocator(locator)
	return o
}

// SetLocator adds the locator to the serve agents params
func (o *ServeAgentsParams) SetLocator(locator *string) {
	o.Locator = locator
}

// WriteToRequest writes these params to a swagger request
func (o *ServeAgentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.IncludeDisconnected != nil {

		// query param includeDisconnected
		var qrIncludeDisconnected bool
		if o.IncludeDisconnected != nil {
			qrIncludeDisconnected = *o.IncludeDisconnected
		}
		qIncludeDisconnected := swag.FormatBool(qrIncludeDisconnected)
		if qIncludeDisconnected != "" {
			if err := r.SetQueryParam("includeDisconnected", qIncludeDisconnected); err != nil {
				return err
			}
		}

	}

	if o.IncludeUnauthorized != nil {

		// query param includeUnauthorized
		var qrIncludeUnauthorized bool
		if o.IncludeUnauthorized != nil {
			qrIncludeUnauthorized = *o.IncludeUnauthorized
		}
		qIncludeUnauthorized := swag.FormatBool(qrIncludeUnauthorized)
		if qIncludeUnauthorized != "" {
			if err := r.SetQueryParam("includeUnauthorized", qIncludeUnauthorized); err != nil {
				return err
			}
		}

	}

	if o.Locator != nil {

		// query param locator
		var qrLocator string
		if o.Locator != nil {
			qrLocator = *o.Locator
		}
		qLocator := qrLocator
		if qLocator != "" {
			if err := r.SetQueryParam("locator", qLocator); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
