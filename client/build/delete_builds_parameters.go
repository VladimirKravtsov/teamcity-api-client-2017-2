// Code generated by go-swagger; DO NOT EDIT.

package build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteBuildsParams creates a new DeleteBuildsParams object
// with the default values initialized.
func NewDeleteBuildsParams() *DeleteBuildsParams {
	var ()
	return &DeleteBuildsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteBuildsParamsWithTimeout creates a new DeleteBuildsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteBuildsParamsWithTimeout(timeout time.Duration) *DeleteBuildsParams {
	var ()
	return &DeleteBuildsParams{

		timeout: timeout,
	}
}

// NewDeleteBuildsParamsWithContext creates a new DeleteBuildsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteBuildsParamsWithContext(ctx context.Context) *DeleteBuildsParams {
	var ()
	return &DeleteBuildsParams{

		Context: ctx,
	}
}

// NewDeleteBuildsParamsWithHTTPClient creates a new DeleteBuildsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteBuildsParamsWithHTTPClient(client *http.Client) *DeleteBuildsParams {
	var ()
	return &DeleteBuildsParams{
		HTTPClient: client,
	}
}

/*DeleteBuildsParams contains all the parameters to send to the API endpoint
for the delete builds operation typically these are written to a http.Request
*/
type DeleteBuildsParams struct {

	/*Locator*/
	Locator *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete builds params
func (o *DeleteBuildsParams) WithTimeout(timeout time.Duration) *DeleteBuildsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete builds params
func (o *DeleteBuildsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete builds params
func (o *DeleteBuildsParams) WithContext(ctx context.Context) *DeleteBuildsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete builds params
func (o *DeleteBuildsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete builds params
func (o *DeleteBuildsParams) WithHTTPClient(client *http.Client) *DeleteBuildsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete builds params
func (o *DeleteBuildsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLocator adds the locator to the delete builds params
func (o *DeleteBuildsParams) WithLocator(locator *string) *DeleteBuildsParams {
	o.SetLocator(locator)
	return o
}

// SetLocator adds the locator to the delete builds params
func (o *DeleteBuildsParams) SetLocator(locator *string) {
	o.Locator = locator
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteBuildsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Locator != nil {

		// query param locator
		var qrLocator string
		if o.Locator != nil {
			qrLocator = *o.Locator
		}
		qLocator := qrLocator
		if qLocator != "" {
			if err := r.SetQueryParam("locator", qLocator); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
