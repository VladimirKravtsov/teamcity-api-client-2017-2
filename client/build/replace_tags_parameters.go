// Code generated by go-swagger; DO NOT EDIT.

package build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/VladimirKravtsov/teamcity-api-client-2017-2/models"
)

// NewReplaceTagsParams creates a new ReplaceTagsParams object
// with the default values initialized.
func NewReplaceTagsParams() *ReplaceTagsParams {
	var ()
	return &ReplaceTagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewReplaceTagsParamsWithTimeout creates a new ReplaceTagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewReplaceTagsParamsWithTimeout(timeout time.Duration) *ReplaceTagsParams {
	var ()
	return &ReplaceTagsParams{

		timeout: timeout,
	}
}

// NewReplaceTagsParamsWithContext creates a new ReplaceTagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewReplaceTagsParamsWithContext(ctx context.Context) *ReplaceTagsParams {
	var ()
	return &ReplaceTagsParams{

		Context: ctx,
	}
}

// NewReplaceTagsParamsWithHTTPClient creates a new ReplaceTagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewReplaceTagsParamsWithHTTPClient(client *http.Client) *ReplaceTagsParams {
	var ()
	return &ReplaceTagsParams{
		HTTPClient: client,
	}
}

/*ReplaceTagsParams contains all the parameters to send to the API endpoint
for the replace tags operation typically these are written to a http.Request
*/
type ReplaceTagsParams struct {

	/*Body*/
	Body *models.Tags
	/*BuildLocator*/
	BuildLocator string
	/*Fields*/
	Fields *string
	/*Locator*/
	Locator *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the replace tags params
func (o *ReplaceTagsParams) WithTimeout(timeout time.Duration) *ReplaceTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the replace tags params
func (o *ReplaceTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the replace tags params
func (o *ReplaceTagsParams) WithContext(ctx context.Context) *ReplaceTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the replace tags params
func (o *ReplaceTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the replace tags params
func (o *ReplaceTagsParams) WithHTTPClient(client *http.Client) *ReplaceTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the replace tags params
func (o *ReplaceTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the replace tags params
func (o *ReplaceTagsParams) WithBody(body *models.Tags) *ReplaceTagsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the replace tags params
func (o *ReplaceTagsParams) SetBody(body *models.Tags) {
	o.Body = body
}

// WithBuildLocator adds the buildLocator to the replace tags params
func (o *ReplaceTagsParams) WithBuildLocator(buildLocator string) *ReplaceTagsParams {
	o.SetBuildLocator(buildLocator)
	return o
}

// SetBuildLocator adds the buildLocator to the replace tags params
func (o *ReplaceTagsParams) SetBuildLocator(buildLocator string) {
	o.BuildLocator = buildLocator
}

// WithFields adds the fields to the replace tags params
func (o *ReplaceTagsParams) WithFields(fields *string) *ReplaceTagsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the replace tags params
func (o *ReplaceTagsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithLocator adds the locator to the replace tags params
func (o *ReplaceTagsParams) WithLocator(locator *string) *ReplaceTagsParams {
	o.SetLocator(locator)
	return o
}

// SetLocator adds the locator to the replace tags params
func (o *ReplaceTagsParams) SetLocator(locator *string) {
	o.Locator = locator
}

// WriteToRequest writes these params to a swagger request
func (o *ReplaceTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param buildLocator
	if err := r.SetPathParam("buildLocator", o.BuildLocator); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Locator != nil {

		// query param locator
		var qrLocator string
		if o.Locator != nil {
			qrLocator = *o.Locator
		}
		qLocator := qrLocator
		if qLocator != "" {
			if err := r.SetQueryParam("locator", qLocator); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
