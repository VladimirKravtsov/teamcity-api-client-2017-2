// Code generated by go-swagger; DO NOT EDIT.

package build_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAddFeatureParameterParams creates a new AddFeatureParameterParams object
// with the default values initialized.
func NewAddFeatureParameterParams() *AddFeatureParameterParams {
	var ()
	return &AddFeatureParameterParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddFeatureParameterParamsWithTimeout creates a new AddFeatureParameterParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddFeatureParameterParamsWithTimeout(timeout time.Duration) *AddFeatureParameterParams {
	var ()
	return &AddFeatureParameterParams{

		timeout: timeout,
	}
}

// NewAddFeatureParameterParamsWithContext creates a new AddFeatureParameterParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddFeatureParameterParamsWithContext(ctx context.Context) *AddFeatureParameterParams {
	var ()
	return &AddFeatureParameterParams{

		Context: ctx,
	}
}

// NewAddFeatureParameterParamsWithHTTPClient creates a new AddFeatureParameterParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddFeatureParameterParamsWithHTTPClient(client *http.Client) *AddFeatureParameterParams {
	var ()
	return &AddFeatureParameterParams{
		HTTPClient: client,
	}
}

/*AddFeatureParameterParams contains all the parameters to send to the API endpoint
for the add feature parameter operation typically these are written to a http.Request
*/
type AddFeatureParameterParams struct {

	/*Body*/
	Body string
	/*BtLocator*/
	BtLocator string
	/*FeatureID*/
	FeatureID string
	/*ParameterName*/
	ParameterName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add feature parameter params
func (o *AddFeatureParameterParams) WithTimeout(timeout time.Duration) *AddFeatureParameterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add feature parameter params
func (o *AddFeatureParameterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add feature parameter params
func (o *AddFeatureParameterParams) WithContext(ctx context.Context) *AddFeatureParameterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add feature parameter params
func (o *AddFeatureParameterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add feature parameter params
func (o *AddFeatureParameterParams) WithHTTPClient(client *http.Client) *AddFeatureParameterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add feature parameter params
func (o *AddFeatureParameterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the add feature parameter params
func (o *AddFeatureParameterParams) WithBody(body string) *AddFeatureParameterParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the add feature parameter params
func (o *AddFeatureParameterParams) SetBody(body string) {
	o.Body = body
}

// WithBtLocator adds the btLocator to the add feature parameter params
func (o *AddFeatureParameterParams) WithBtLocator(btLocator string) *AddFeatureParameterParams {
	o.SetBtLocator(btLocator)
	return o
}

// SetBtLocator adds the btLocator to the add feature parameter params
func (o *AddFeatureParameterParams) SetBtLocator(btLocator string) {
	o.BtLocator = btLocator
}

// WithFeatureID adds the featureID to the add feature parameter params
func (o *AddFeatureParameterParams) WithFeatureID(featureID string) *AddFeatureParameterParams {
	o.SetFeatureID(featureID)
	return o
}

// SetFeatureID adds the featureId to the add feature parameter params
func (o *AddFeatureParameterParams) SetFeatureID(featureID string) {
	o.FeatureID = featureID
}

// WithParameterName adds the parameterName to the add feature parameter params
func (o *AddFeatureParameterParams) WithParameterName(parameterName string) *AddFeatureParameterParams {
	o.SetParameterName(parameterName)
	return o
}

// SetParameterName adds the parameterName to the add feature parameter params
func (o *AddFeatureParameterParams) SetParameterName(parameterName string) {
	o.ParameterName = parameterName
}

// WriteToRequest writes these params to a swagger request
func (o *AddFeatureParameterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param btLocator
	if err := r.SetPathParam("btLocator", o.BtLocator); err != nil {
		return err
	}

	// path param featureId
	if err := r.SetPathParam("featureId", o.FeatureID); err != nil {
		return err
	}

	// path param parameterName
	if err := r.SetPathParam("parameterName", o.ParameterName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
