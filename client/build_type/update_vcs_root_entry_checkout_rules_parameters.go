// Code generated by go-swagger; DO NOT EDIT.

package build_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUpdateVcsRootEntryCheckoutRulesParams creates a new UpdateVcsRootEntryCheckoutRulesParams object
// with the default values initialized.
func NewUpdateVcsRootEntryCheckoutRulesParams() *UpdateVcsRootEntryCheckoutRulesParams {
	var ()
	return &UpdateVcsRootEntryCheckoutRulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateVcsRootEntryCheckoutRulesParamsWithTimeout creates a new UpdateVcsRootEntryCheckoutRulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateVcsRootEntryCheckoutRulesParamsWithTimeout(timeout time.Duration) *UpdateVcsRootEntryCheckoutRulesParams {
	var ()
	return &UpdateVcsRootEntryCheckoutRulesParams{

		timeout: timeout,
	}
}

// NewUpdateVcsRootEntryCheckoutRulesParamsWithContext creates a new UpdateVcsRootEntryCheckoutRulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateVcsRootEntryCheckoutRulesParamsWithContext(ctx context.Context) *UpdateVcsRootEntryCheckoutRulesParams {
	var ()
	return &UpdateVcsRootEntryCheckoutRulesParams{

		Context: ctx,
	}
}

// NewUpdateVcsRootEntryCheckoutRulesParamsWithHTTPClient creates a new UpdateVcsRootEntryCheckoutRulesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateVcsRootEntryCheckoutRulesParamsWithHTTPClient(client *http.Client) *UpdateVcsRootEntryCheckoutRulesParams {
	var ()
	return &UpdateVcsRootEntryCheckoutRulesParams{
		HTTPClient: client,
	}
}

/*UpdateVcsRootEntryCheckoutRulesParams contains all the parameters to send to the API endpoint
for the update vcs root entry checkout rules operation typically these are written to a http.Request
*/
type UpdateVcsRootEntryCheckoutRulesParams struct {

	/*Body*/
	Body string
	/*BtLocator*/
	BtLocator string
	/*VcsRootLocator*/
	VcsRootLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithTimeout(timeout time.Duration) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithContext(ctx context.Context) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithHTTPClient(client *http.Client) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithBody(body string) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetBody(body string) {
	o.Body = body
}

// WithBtLocator adds the btLocator to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithBtLocator(btLocator string) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetBtLocator(btLocator)
	return o
}

// SetBtLocator adds the btLocator to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetBtLocator(btLocator string) {
	o.BtLocator = btLocator
}

// WithVcsRootLocator adds the vcsRootLocator to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) WithVcsRootLocator(vcsRootLocator string) *UpdateVcsRootEntryCheckoutRulesParams {
	o.SetVcsRootLocator(vcsRootLocator)
	return o
}

// SetVcsRootLocator adds the vcsRootLocator to the update vcs root entry checkout rules params
func (o *UpdateVcsRootEntryCheckoutRulesParams) SetVcsRootLocator(vcsRootLocator string) {
	o.VcsRootLocator = vcsRootLocator
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateVcsRootEntryCheckoutRulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param btLocator
	if err := r.SetPathParam("btLocator", o.BtLocator); err != nil {
		return err
	}

	// path param vcsRootLocator
	if err := r.SetPathParam("vcsRootLocator", o.VcsRootLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
