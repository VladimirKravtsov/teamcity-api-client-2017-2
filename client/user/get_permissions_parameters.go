// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPermissionsParams creates a new GetPermissionsParams object
// with the default values initialized.
func NewGetPermissionsParams() *GetPermissionsParams {
	var ()
	return &GetPermissionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPermissionsParamsWithTimeout creates a new GetPermissionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPermissionsParamsWithTimeout(timeout time.Duration) *GetPermissionsParams {
	var ()
	return &GetPermissionsParams{

		timeout: timeout,
	}
}

// NewGetPermissionsParamsWithContext creates a new GetPermissionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPermissionsParamsWithContext(ctx context.Context) *GetPermissionsParams {
	var ()
	return &GetPermissionsParams{

		Context: ctx,
	}
}

// NewGetPermissionsParamsWithHTTPClient creates a new GetPermissionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPermissionsParamsWithHTTPClient(client *http.Client) *GetPermissionsParams {
	var ()
	return &GetPermissionsParams{
		HTTPClient: client,
	}
}

/*GetPermissionsParams contains all the parameters to send to the API endpoint
for the get permissions operation typically these are written to a http.Request
*/
type GetPermissionsParams struct {

	/*Fields*/
	Fields *string
	/*Locator*/
	Locator *string
	/*UserLocator*/
	UserLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get permissions params
func (o *GetPermissionsParams) WithTimeout(timeout time.Duration) *GetPermissionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get permissions params
func (o *GetPermissionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get permissions params
func (o *GetPermissionsParams) WithContext(ctx context.Context) *GetPermissionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get permissions params
func (o *GetPermissionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get permissions params
func (o *GetPermissionsParams) WithHTTPClient(client *http.Client) *GetPermissionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get permissions params
func (o *GetPermissionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the get permissions params
func (o *GetPermissionsParams) WithFields(fields *string) *GetPermissionsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get permissions params
func (o *GetPermissionsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithLocator adds the locator to the get permissions params
func (o *GetPermissionsParams) WithLocator(locator *string) *GetPermissionsParams {
	o.SetLocator(locator)
	return o
}

// SetLocator adds the locator to the get permissions params
func (o *GetPermissionsParams) SetLocator(locator *string) {
	o.Locator = locator
}

// WithUserLocator adds the userLocator to the get permissions params
func (o *GetPermissionsParams) WithUserLocator(userLocator string) *GetPermissionsParams {
	o.SetUserLocator(userLocator)
	return o
}

// SetUserLocator adds the userLocator to the get permissions params
func (o *GetPermissionsParams) SetUserLocator(userLocator string) {
	o.UserLocator = userLocator
}

// WriteToRequest writes these params to a swagger request
func (o *GetPermissionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Locator != nil {

		// query param locator
		var qrLocator string
		if o.Locator != nil {
			qrLocator = *o.Locator
		}
		qLocator := qrLocator
		if qLocator != "" {
			if err := r.SetQueryParam("locator", qLocator); err != nil {
				return err
			}
		}

	}

	// path param userLocator
	if err := r.SetPathParam("userLocator", o.UserLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
