// Code generated by go-swagger; DO NOT EDIT.

package vcs_root_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetChildrenParams creates a new GetChildrenParams object
// with the default values initialized.
func NewGetChildrenParams() *GetChildrenParams {
	var ()
	return &GetChildrenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetChildrenParamsWithTimeout creates a new GetChildrenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetChildrenParamsWithTimeout(timeout time.Duration) *GetChildrenParams {
	var ()
	return &GetChildrenParams{

		timeout: timeout,
	}
}

// NewGetChildrenParamsWithContext creates a new GetChildrenParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetChildrenParamsWithContext(ctx context.Context) *GetChildrenParams {
	var ()
	return &GetChildrenParams{

		Context: ctx,
	}
}

// NewGetChildrenParamsWithHTTPClient creates a new GetChildrenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetChildrenParamsWithHTTPClient(client *http.Client) *GetChildrenParams {
	var ()
	return &GetChildrenParams{
		HTTPClient: client,
	}
}

/*GetChildrenParams contains all the parameters to send to the API endpoint
for the get children operation typically these are written to a http.Request
*/
type GetChildrenParams struct {

	/*BasePath*/
	BasePath *string
	/*Fields*/
	Fields *string
	/*Locator*/
	Locator *string
	/*Path*/
	Path string
	/*VcsRootInstanceLocator*/
	VcsRootInstanceLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get children params
func (o *GetChildrenParams) WithTimeout(timeout time.Duration) *GetChildrenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get children params
func (o *GetChildrenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get children params
func (o *GetChildrenParams) WithContext(ctx context.Context) *GetChildrenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get children params
func (o *GetChildrenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get children params
func (o *GetChildrenParams) WithHTTPClient(client *http.Client) *GetChildrenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get children params
func (o *GetChildrenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBasePath adds the basePath to the get children params
func (o *GetChildrenParams) WithBasePath(basePath *string) *GetChildrenParams {
	o.SetBasePath(basePath)
	return o
}

// SetBasePath adds the basePath to the get children params
func (o *GetChildrenParams) SetBasePath(basePath *string) {
	o.BasePath = basePath
}

// WithFields adds the fields to the get children params
func (o *GetChildrenParams) WithFields(fields *string) *GetChildrenParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get children params
func (o *GetChildrenParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithLocator adds the locator to the get children params
func (o *GetChildrenParams) WithLocator(locator *string) *GetChildrenParams {
	o.SetLocator(locator)
	return o
}

// SetLocator adds the locator to the get children params
func (o *GetChildrenParams) SetLocator(locator *string) {
	o.Locator = locator
}

// WithPath adds the path to the get children params
func (o *GetChildrenParams) WithPath(path string) *GetChildrenParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the get children params
func (o *GetChildrenParams) SetPath(path string) {
	o.Path = path
}

// WithVcsRootInstanceLocator adds the vcsRootInstanceLocator to the get children params
func (o *GetChildrenParams) WithVcsRootInstanceLocator(vcsRootInstanceLocator string) *GetChildrenParams {
	o.SetVcsRootInstanceLocator(vcsRootInstanceLocator)
	return o
}

// SetVcsRootInstanceLocator adds the vcsRootInstanceLocator to the get children params
func (o *GetChildrenParams) SetVcsRootInstanceLocator(vcsRootInstanceLocator string) {
	o.VcsRootInstanceLocator = vcsRootInstanceLocator
}

// WriteToRequest writes these params to a swagger request
func (o *GetChildrenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BasePath != nil {

		// query param basePath
		var qrBasePath string
		if o.BasePath != nil {
			qrBasePath = *o.BasePath
		}
		qBasePath := qrBasePath
		if qBasePath != "" {
			if err := r.SetQueryParam("basePath", qBasePath); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Locator != nil {

		// query param locator
		var qrLocator string
		if o.Locator != nil {
			qrLocator = *o.Locator
		}
		qLocator := qrLocator
		if qLocator != "" {
			if err := r.SetQueryParam("locator", qLocator); err != nil {
				return err
			}
		}

	}

	// path param path
	if err := r.SetPathParam("path", o.Path); err != nil {
		return err
	}

	// path param vcsRootInstanceLocator
	if err := r.SetPathParam("vcsRootInstanceLocator", o.VcsRootInstanceLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
