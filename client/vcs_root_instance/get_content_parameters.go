// Code generated by go-swagger; DO NOT EDIT.

package vcs_root_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetContentParams creates a new GetContentParams object
// with the default values initialized.
func NewGetContentParams() *GetContentParams {
	var ()
	return &GetContentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetContentParamsWithTimeout creates a new GetContentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetContentParamsWithTimeout(timeout time.Duration) *GetContentParams {
	var ()
	return &GetContentParams{

		timeout: timeout,
	}
}

// NewGetContentParamsWithContext creates a new GetContentParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetContentParamsWithContext(ctx context.Context) *GetContentParams {
	var ()
	return &GetContentParams{

		Context: ctx,
	}
}

// NewGetContentParamsWithHTTPClient creates a new GetContentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetContentParamsWithHTTPClient(client *http.Client) *GetContentParams {
	var ()
	return &GetContentParams{
		HTTPClient: client,
	}
}

/*GetContentParams contains all the parameters to send to the API endpoint
for the get content operation typically these are written to a http.Request
*/
type GetContentParams struct {

	/*Path*/
	Path string
	/*ResponseBuilder*/
	ResponseBuilder *string
	/*VcsRootInstanceLocator*/
	VcsRootInstanceLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get content params
func (o *GetContentParams) WithTimeout(timeout time.Duration) *GetContentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get content params
func (o *GetContentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get content params
func (o *GetContentParams) WithContext(ctx context.Context) *GetContentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get content params
func (o *GetContentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get content params
func (o *GetContentParams) WithHTTPClient(client *http.Client) *GetContentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get content params
func (o *GetContentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPath adds the path to the get content params
func (o *GetContentParams) WithPath(path string) *GetContentParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the get content params
func (o *GetContentParams) SetPath(path string) {
	o.Path = path
}

// WithResponseBuilder adds the responseBuilder to the get content params
func (o *GetContentParams) WithResponseBuilder(responseBuilder *string) *GetContentParams {
	o.SetResponseBuilder(responseBuilder)
	return o
}

// SetResponseBuilder adds the responseBuilder to the get content params
func (o *GetContentParams) SetResponseBuilder(responseBuilder *string) {
	o.ResponseBuilder = responseBuilder
}

// WithVcsRootInstanceLocator adds the vcsRootInstanceLocator to the get content params
func (o *GetContentParams) WithVcsRootInstanceLocator(vcsRootInstanceLocator string) *GetContentParams {
	o.SetVcsRootInstanceLocator(vcsRootInstanceLocator)
	return o
}

// SetVcsRootInstanceLocator adds the vcsRootInstanceLocator to the get content params
func (o *GetContentParams) SetVcsRootInstanceLocator(vcsRootInstanceLocator string) {
	o.VcsRootInstanceLocator = vcsRootInstanceLocator
}

// WriteToRequest writes these params to a swagger request
func (o *GetContentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param path
	if err := r.SetPathParam("path", o.Path); err != nil {
		return err
	}

	if o.ResponseBuilder != nil {

		// query param responseBuilder
		var qrResponseBuilder string
		if o.ResponseBuilder != nil {
			qrResponseBuilder = *o.ResponseBuilder
		}
		qResponseBuilder := qrResponseBuilder
		if qResponseBuilder != "" {
			if err := r.SetQueryParam("responseBuilder", qResponseBuilder); err != nil {
				return err
			}
		}

	}

	// path param vcsRootInstanceLocator
	if err := r.SetPathParam("vcsRootInstanceLocator", o.VcsRootInstanceLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
