// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// LicenseKey license key
// swagger:model licenseKey
type LicenseKey struct {

	// active
	Active *bool `json:"active,omitempty" xml:"active"`

	// agents
	Agents int32 `json:"agents,omitempty" xml:"agents"`

	// build types
	BuildTypes int32 `json:"buildTypes,omitempty" xml:"buildTypes"`

	// error details
	ErrorDetails string `json:"errorDetails,omitempty" xml:"errorDetails"`

	// expiration date
	ExpirationDate string `json:"expirationDate,omitempty" xml:"expirationDate"`

	// expired
	Expired *bool `json:"expired,omitempty" xml:"expired"`

	// key
	Key string `json:"key,omitempty" xml:"key"`

	// maintenance end date
	MaintenanceEndDate string `json:"maintenanceEndDate,omitempty" xml:"maintenanceEndDate"`

	// obsolete
	Obsolete *bool `json:"obsolete,omitempty" xml:"obsolete"`

	// raw type
	RawType string `json:"rawType,omitempty" xml:"rawType"`

	// servers
	Servers int32 `json:"servers,omitempty" xml:"servers"`

	// type
	Type string `json:"type,omitempty" xml:"type"`

	// unlimited agents
	UnlimitedAgents *bool `json:"unlimitedAgents,omitempty" xml:"unlimitedAgents"`

	// unlimited build types
	UnlimitedBuildTypes *bool `json:"unlimitedBuildTypes,omitempty" xml:"unlimitedBuildTypes"`

	// valid
	Valid *bool `json:"valid,omitempty" xml:"valid"`
}

// Validate validates this license key
func (m *LicenseKey) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LicenseKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LicenseKey) UnmarshalBinary(b []byte) error {
	var res LicenseKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
