// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Resolution resolution
// swagger:model Resolution
type Resolution struct {

	// from posted for investigation
	// Enum: [MANUALLY WHEN_FIXED]
	FromPostedForInvestigation string `json:"fromPostedForInvestigation,omitempty"`

	// time
	Time string `json:"time,omitempty"`

	// type
	Type string `json:"type,omitempty" xml:"type"`
}

// Validate validates this resolution
func (m *Resolution) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFromPostedForInvestigation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var resolutionTypeFromPostedForInvestigationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MANUALLY","WHEN_FIXED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resolutionTypeFromPostedForInvestigationPropEnum = append(resolutionTypeFromPostedForInvestigationPropEnum, v)
	}
}

const (

	// ResolutionFromPostedForInvestigationMANUALLY captures enum value "MANUALLY"
	ResolutionFromPostedForInvestigationMANUALLY string = "MANUALLY"

	// ResolutionFromPostedForInvestigationWHENFIXED captures enum value "WHEN_FIXED"
	ResolutionFromPostedForInvestigationWHENFIXED string = "WHEN_FIXED"
)

// prop value enum
func (m *Resolution) validateFromPostedForInvestigationEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, resolutionTypeFromPostedForInvestigationPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Resolution) validateFromPostedForInvestigation(formats strfmt.Registry) error {

	if swag.IsZero(m.FromPostedForInvestigation) { // not required
		return nil
	}

	// value enum
	if err := m.validateFromPostedForInvestigationEnum("fromPostedForInvestigation", "body", m.FromPostedForInvestigation); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Resolution) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Resolution) UnmarshalBinary(b []byte) error {
	var res Resolution
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
