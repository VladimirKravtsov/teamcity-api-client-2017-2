// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Revision revision
// swagger:model Revision
type Revision struct {

	// checkout rules
	CheckoutRules string `json:"checkout-rules,omitempty"`

	// internal version
	InternalVersion string `json:"internalVersion,omitempty" xml:"internalVersion"`

	// vcs root instance
	VcsRootInstance *VcsRootInstance `json:"vcs-root-instance,omitempty"`

	// vcs branch name
	VcsBranchName string `json:"vcsBranchName,omitempty" xml:"vcsBranchName"`

	// version
	Version string `json:"version,omitempty" xml:"version"`
}

// Validate validates this revision
func (m *Revision) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVcsRootInstance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Revision) validateVcsRootInstance(formats strfmt.Registry) error {

	if swag.IsZero(m.VcsRootInstance) { // not required
		return nil
	}

	if m.VcsRootInstance != nil {
		if err := m.VcsRootInstance.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vcs-root-instance")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Revision) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Revision) UnmarshalBinary(b []byte) error {
	var res Revision
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
